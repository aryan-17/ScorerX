datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["rhel-openssl-1.0.x", "windows"]
}

model User {
  id         String   @id @default(uuid())
  FirstName  String
  LastName   String
  email      String   @unique
  password   String
  photoUrl   String? // Default dicebear of first and last name
  Gender     Gender
  DOB        DateTime
  token      String?
  createdAt  DateTime @default(now())
  ownedTeams Team?    @relation(name: "OwnerToUser")
  profile    Profile? @relation(name: "ProfileToUser")

  @@unique([FirstName, LastName])
}

model Verification {
  id       Int     @id @default(autoincrement())
  email    String
  verified Boolean @default(false)
}

model Profile {
  id             Int     @id @default(autoincrement())
  Role           Role    @default(ALL_ROUNDER)
  Matches        Int?    @default(0)
  matchWon       Int?    @default(0)
  Runs           Int?    @default(0)
  Wicket         Int?    @default(0)
  strikeRate     Int?    @default(0)
  averageEconomy Int?    @default(0)
  manOfTheMatch  Int?    @default(0)
  averageRuns    Int?    @default(0)
  highestRuns    Int?    @default(0)
  highestWickets Int?    @default(0)
  captain        Boolean @default(false)
  umpire         Game?   @relation(name: "UmpireToProfile", fields: [umpireId], references: [id])
  umpireId       Int?    @unique
  user           User    @relation(name: "ProfileToUser", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId         String  @unique
  team           Team?   @relation(name: "ProfileToTeam", fields: [teamId], references: [id], onUpdate: Cascade)
  teamId         Int?
}

model Team {
  id            Int       @id @default(autoincrement())
  name          String
  playedMatches Int       @default(0)
  owner         User      @relation(name: "OwnerToUser", fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ownerId       String    @unique
  players       Profile[] @relation(name: "ProfileToTeam")
  Game          Game?      @relation(name: "GameToTeam", fields: [gameId], references: [id])
  gameId        Int?

  @@unique([name, ownerId])
}

model Game {
  id        Int      @id @default(autoincrement())
  teams     Team[]   @relation(name: "GameToTeam")
  gameCode  Int      @unique
  umpire    Profile? @relation(name: "UmpireToProfile")
  overs     Int
  scoreCard Json?
  finished  Boolean  @default(false)
}

model Otp {
  id        Int      @id @default(autoincrement())
  email     String
  otp       String
  createdAt DateTime @default(now())
}

enum Role {
  BATSMAN
  BOWLER
  ALL_ROUNDER
}

enum Gender {
  MALE
  FEMALE
}
