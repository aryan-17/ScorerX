datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["rhel-openssl-1.0.x", "windows"]
}

model User {
  id        String   @id @default(uuid())
  FirstName String
  LastName  String
  email     String   @unique
  password  String
  photoUrl  String? // Default dicebear of first and last name
  Gender    Gender
  DOB       DateTime
  token     String?
  createdAt DateTime @default(now())
  profile   Profile? @relation(name: "ProfileToUser")
}

model Verification {
  id Int @id @default(autoincrement())
  email String 
  verified Boolean @default(false)
}


model Profile {
  id      Int     @id @default(autoincrement())
  Role    Role    @default(ALL_ROUNDER)
  Runs    Int?    @default(0)
  Wicket  Int?    @default(0)
  Matches Int?    @default(0)
  captain Boolean @default(false)
  user    User    @relation(name: "ProfileToUser", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId  String  @unique
  team    Team?   @relation(name: "ProfileToTeam", fields: [teamId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  teamId  Int?    @unique
}

model Team {
  id            Int       @id @default(autoincrement())
  playedMatches Int?
  winRate       Float?
  players       Profile[] @relation(name: "ProfileToTeam")
  matchId       Game[]    @relation(name: "GameToTeam")
}

model Game {
  id        Int      @id @default(autoincrement())
  date      DateTime
  teams     Team[]   @relation(name: "GameToTeam")
  overs     Int
  scoreCard Json
}

model Otp {
  id        Int      @id @default(autoincrement())
  email     String
  otp       String
  createdAt DateTime @default(now())
}

enum Role {
  BATSMAN
  BOWLER
  ALL_ROUNDER
  UMPIRE
}

enum Gender {
  MALE
  FEMALE
}
